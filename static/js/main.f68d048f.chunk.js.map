{"version":3,"sources":["Login.js","Editor.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","tab","width","minWidth","page","backgroundColor","borderLeft","CustomForm","props","useState","formValues","setFormValues","formComponents","TextField","value","onChange","e","target","type","label","variant","required","style","margin","Button","color","onSubmit","preventDefault","console","log","Box","textAlign","paddingTop","map","item","index","div","initial","opacity","animate","transition","duration","Login","classes","tabIndex","setIndex","loginVisible","setVisibility","Fragment","size","onClick","Drawer","anchor","open","onClose","paper","Tabs","textColor","indicatorColor","Tab","className","theme","listBox","height","padding","overflowY","display","flexDirection","borderTop","borderRight","borderBottom","text","leftIcon","palette","secondary","main","contrastText","rightIcon","formBox","formField","marginRight","formButton","marginTop","CustomListItem","editFieldRef","useRef","editedText","setEditedText","useEffect","inEditing","current","focus","ListItem","ListItemIcon","IconButton","edge","inputRef","multiline","handleEdit","Typography","ListItemSecondaryAction","disabled","setInEditing","handleDelete","Editor","key","listData","setListData","insertText","setInsertText","List","newState","slice","oldData","length","darkTheme","createMuiTheme","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f68d048f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport \"fontsource-roboto\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Box from \"@material-ui/core/Box\";\nimport { motion } from \"framer-motion\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles({\n  tab: {\n    width: \"100px\",\n    minWidth: \"100px\",\n  },\n  page: {\n    backgroundColor: \"black\",\n    borderLeft: \"1px white solid\",\n  },\n});\n\nconst CustomForm = (props) => {\n  const [formValues, setFormValues] = useState([\"\", \"\", \"\"]);\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(formValues);\n    setFormValues([\"\", \"\", \"\"]);\n    // setVisibility(false);\n  };\n  const formComponents = [\n    <TextField\n      key={0}\n      value={formValues[0]}\n      onChange={(e) =>\n        setFormValues([e.target.value, formValues[1], formValues[2]])\n      }\n      type=\"text\"\n      label=\"List Name\"\n      variant=\"outlined\"\n      required\n      style={{ margin: \"5px\" }}\n    ></TextField>,\n    <TextField\n      key={1}\n      value={formValues[1]}\n      onChange={(e) =>\n        setFormValues([formValues[0], e.target.value, formValues[2]])\n      }\n      type=\"text\"\n      label=\"Password\"\n      variant=\"outlined\"\n      required\n      style={{ margin: \"5px\" }}\n    ></TextField>,\n    <TextField\n      key={2}\n      value={formValues[2]}\n      onChange={(e) =>\n        setFormValues([formValues[0], formValues[1], e.target.value])\n      }\n      type=\"text\"\n      label=\"Author Name\"\n      variant=\"outlined\"\n      style={{ margin: \"5px\" }}\n    ></TextField>,\n    <Button key={3} variant=\"contained\" color=\"secondary\" type=\"submit\">\n      View List\n    </Button>,\n    <Button key={4} variant=\"contained\" color=\"secondary\" type=\"submit\">\n      Modify List\n    </Button>,\n    <Button key={5} variant=\"contained\" color=\"secondary\" type=\"submit\">\n      Create List\n    </Button>,\n  ];\n  return (\n    <form onSubmit={handleSubmit}>\n      <Box textAlign=\"center\" width=\"270px\" paddingTop=\"50px\">\n        {formComponents.map((item, index) => {\n          if (index <= props.index || index === props.index + 3) {\n            return (\n              <motion.div\n                key={index}\n                initial={{\n                  opacity: 0,\n                }}\n                animate={{ opacity: 1 }}\n                transition={{ duration: index > 2 ? 1 : 0.5 }}\n              >\n                {item}\n              </motion.div>\n            );\n          }\n          return <div />;\n        })}\n      </Box>\n    </form>\n  );\n};\n\nconst Login = () => {\n  const classes = useStyles();\n  const [tabIndex, setIndex] = useState(0);\n  const [loginVisible, setVisibility] = useState(false);\n  return (\n    <React.Fragment key={\"right\"}>\n      <Box textAlign=\"right\" margin=\"-41px 7px 0px 0px\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          onClick={(e) => setVisibility(true)}\n        >\n          Login\n        </Button>\n      </Box>\n      <Drawer\n        anchor=\"right\"\n        open={loginVisible}\n        onClose={(e) => setVisibility(false)}\n        classes={{\n          paper: [classes.page],\n        }}\n      >\n        <Tabs\n          value={tabIndex}\n          onChange={(e, index) => setIndex(index)}\n          textColor=\"primary\"\n          indicatorColor=\"primary\"\n        >\n          <Tab label=\"View\" className={classes.tab} />\n          <Tab label=\"Modify\" className={classes.tab} />\n          <Tab label=\"Create\" className={classes.tab} />\n        </Tabs>\n        <CustomForm index={tabIndex} />\n      </Drawer>\n    </React.Fragment>\n  );\n};\n\nexport default Login;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Box from \"@material-ui/core/Box\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ClearAllOutlinedIcon from \"@material-ui/icons/ClearAllOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n  listBox: {\n    height: \"500px\",\n    width: \"1300px\",\n    padding: \"13px\",\n    overflowY: \"auto\",\n    display: \"flex\",\n    flexDirection: \"column-reverse\",\n    borderTop: \"1px white solid\",\n    borderRight: \"1px white solid\",\n    borderBottom: \"1px white solid\",\n  },\n  text: {\n    color: \"white\",\n  },\n  item: {\n    borderBottom: \"2px white dashed\",\n  },\n  leftIcon: {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.secondary.contrastText,\n    width: \"40px\",\n    height: \"40px\",\n  },\n  rightIcon: {\n    color: theme.palette.secondary.contrastText,\n  },\n  formBox: {\n    margin: \"30px\",\n    width: \"1300px\",\n  },\n  formField: {\n    marginRight: \"20px\",\n    width: \"900px\",\n  },\n  formButton: {\n    marginTop: \"5.69px\",\n  },\n}));\n\nconst CustomListItem = (props) => {\n  const classes = useStyles();\n  const editFieldRef = useRef(null);\n  const [editedText, setEditedText] = useState(props.text);\n  useEffect(() => {\n    if (props.inEditing === props.index) {\n      editFieldRef.current.focus();\n    }\n  }, [props.inEditing, props.index]);\n  const getActive = () => {\n    if (props.inEditing === props.index) {\n      return (\n        <TextField\n          style={{ width: \"1100px\" }}\n          inputRef={editFieldRef}\n          value={editedText}\n          multiline\n          onChange={(e) => setEditedText(e.target.value)}\n        />\n      );\n    }\n    if (editedText !== props.text) {\n      props.handleEdit(editedText, props.index);\n    }\n    return (\n      <Typography color=\"textPrimary\" style={{ width: \"1100px\" }}>\n        {props.text}\n      </Typography>\n    );\n  };\n  return (\n    <ListItem className={classes.item}>\n      <ListItemIcon>\n        <IconButton edge=\"start\" className={classes.leftIcon}>\n          <ClearAllOutlinedIcon />\n        </IconButton>\n      </ListItemIcon>\n      {getActive()}\n      <ListItemSecondaryAction>\n        <IconButton\n          edge=\"end\"\n          className={classes.rightIcon}\n          disabled={props.inEditing !== props.index && props.inEditing !== -1}\n          onClick={(e) =>\n            props.setInEditing(\n              props.inEditing === props.index ? -1 : props.index\n            )\n          }\n        >\n          <EditOutlinedIcon />\n        </IconButton>\n        <IconButton\n          edge=\"end\"\n          className={classes.rightIcon}\n          onClick={(e) => props.handleDelete(props.index)}\n        >\n          <DeleteOutlinedIcon />\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nconst Editor = () => {\n  const classes = useStyles();\n  const [listData, setListData] = useState([\n    {\n      text: \"Back End has not been made yet, lists are not saved\",\n      key: 0,\n    },\n    { text: \"This is a stock List\", key: 1 },\n    {\n      text: 'Click \"Login\" and proceed from there to open another list',\n      key: 2,\n    },\n  ]);\n  const [inEditing, setInEditing] = useState(-1);\n  const handleEdit = (text, index) => {\n    setListData([\n      ...listData.slice(0, index),\n      { text: text, key: listData[index].key },\n      ...listData.slice(index + 1),\n    ]);\n  };\n  const handleDelete = (index) => {\n    setListData([...listData.slice(0, index), ...listData.slice(index + 1)]);\n  };\n  const [insertText, setInsertText] = useState(\"\");\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setListData((oldData) => {\n      return [\n        ...oldData,\n        {\n          text: insertText,\n          key: oldData.length === 0 ? 0 : oldData[oldData.length - 1].key + 1,\n        },\n      ];\n    });\n    setInsertText(\"\");\n  };\n  return (\n    <Box>\n      <Box className={classes.listBox}>\n        <List className={classes.text}>\n          {listData.map((item, index) => {\n            return (\n              <CustomListItem\n                key={item.key}\n                index={index}\n                text={item.text}\n                inEditing={inEditing}\n                setInEditing={(newState) => setInEditing(newState)}\n                handleEdit={(text, index) => handleEdit(text, index)}\n                handleDelete={(index) => handleDelete(index)}\n              />\n            );\n          })}\n        </List>\n      </Box>\n      <Box className={classes.formBox}>\n        <form onSubmit={handleSubmit}>\n          <TextField\n            value={insertText}\n            onChange={(e) => setInsertText(e.target.value)}\n            variant=\"outlined\"\n            color=\"secondary\"\n            label=\"Type text to insert\"\n            multiline\n            className={classes.formField}\n          ></TextField>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            size=\"large\"\n            className={classes.formButton}\n          >\n            Insert\n          </Button>\n        </form>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Editor;\n","import \"./App.css\";\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport { ThemeProvider, Typography } from \"@material-ui/core\";\nimport Login from \"./Login\";\nimport Editor from \"./Editor\";\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n  },\n});\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={darkTheme}>\n        <Typography variant=\"h4\" color=\"secondary\">List Name would be here</Typography>\n        <Typography variant=\"h6\" color=\"secondary\">Author Name would be here</Typography>\n        <Login />\n        <Editor />\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}